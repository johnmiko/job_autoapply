Besides my qualifications for the position, I have some specific experiences that helps set me a part from other canidates.

I have 2 younger sisters that are mentally disabled. Growing up with them ingrained into me the concept of being a team player. Because of this, it’s normal for me to volunteer to do the work that no one else wants to at a job. It has also made me very patient and understanding.

Personality-wise, I have always enjoyed putting the finishing touches on things. Some obvious examples of this are when I would write music with friends, playing Minecraft and completing puzzles. This translates into work where I find I enjoy reviewing pull requests and doing documentation more than others.

I spent 3 years working on a hockey betting algorithm. It started out as trying to predict which hockey team was going to win the game, then eventually turned into “can I better predict the odds of this hockey game vs one specific betting website?” I found I was able to predict the odds slightly better for games where one team was very favoured to win. When I started betting on the games, I initially won 11 bets in a row, and then proceeded to lose the next 20 and bottomed out. When I went back and looked at the code, I had 2 small bugs that made the math work not as well as I thought it did. The reason I didn’t catch the bugs is not because I didn’t have unit tests, but because the tests I wrote weren’t strict enough. So having lost a couple thousand dollars of my own money from not writing good enough unit tests, it’s something I do very well now.

I spent a year as a self-employed stock trader. During this time, I spent most of my time writing python code to analyze the market. This experience along with the hockey betting were both essentially zero-sum games problems. Because of this there was little to no free information about how to solve these problems. To learn and find solutions to these I had to create many experiments, to validate my ideas and make progress on the problems. I now am excellent at problem decomposition and undeterred by the difficulty of a problem.